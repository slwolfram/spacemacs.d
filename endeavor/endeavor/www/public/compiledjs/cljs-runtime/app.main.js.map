{"version":3,"sources":["app/main.cljs"],"mappings":";AAIA,oBAAA,2CAAA,/DAAKA,gIAAsB,WAAKC;AAAL,AAAQ,OAACC,qGAAI,AAAQD;GAAhD,4DAAA;AAAA,AAC4B,4GAAA,rGAACC;GAD7B,6DAAA;AAAA,AAE4B,4GAAA,rGAACA;;AAE7B,AAAKC,kBAAO,qBAAA,rBAACC,mDAAwCJ;AAErD,mBAAA,nBAAMK,8CAASC;AAAf,AACE,IAAMC,QAAM,AAACC,gDAAO,uBAAA,AAAA,vBAACC,eAAKH;IACpBI,SAAOP;AADb,AAAA,0FAAA;;AAOF,uBAAA,vBAAMQ;AAAN,AAAA,0FAAA,kDAAA;;AAGA,0BAAA,1BAAMC;AAAN,AAAA,0FAAA,mDAAA,mFAAA,kDAAA,2BAAA,oGAAA,2CAAA,sDAAA,lHAGIP;;AAEJ,gBAAA,hBAAMQ;AAAN,AAAA,0FACGD","names":["app.main/handlers","e","cljs.core.prn","app.main/socket","wscljs.client/create","app.main/chatlog","welcome","state","reagent.core.atom","cljs.core/cons","socket","app.main/the-kingdom","app.main/the-foundation","app.main/home"],"sourcesContent":["(ns app.main\n  (:require [reagent.core :as r]\n            [wscljs.client :as ws]))\n\n(def handlers {:on-message (fn [e] (prn (.-data e)))\n               :on-open    #(prn \"Opening a new connection\")\n               :on-close   #(prn \"Closing a connection\")})\n\n(def socket (ws/create \"ws://localhost:8080/api/wss\" handlers))\n\n(defn chatlog [welcome]\n  (let [state (r/atom (cons welcome '()))\n        socket socket]\n    ;;(js/console.log state)\n    [:div ]\n    )\n  )\n\n(defn the-kingdom []\n  [:h1 \"The Kingdom\"])\n\n(defn the-foundation []\n  [:div\n   [:h1 \"The Waiting Room\"]\n   [chatlog {:text \"Welcome message\"}]])\n\n(defn home []\n  [the-foundation])\n\n\n"]}