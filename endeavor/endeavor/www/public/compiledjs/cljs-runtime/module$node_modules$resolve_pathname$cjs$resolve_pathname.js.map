{
"version":3,
"file":"module$node_modules$resolve_pathname$cjs$resolve_pathname.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/resolve-pathname/cjs/resolve-pathname.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$resolve_pathname$cjs$resolve_pathname\"] = function(global,require,module,exports) {\n'use strict';\n\nfunction isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n\n  var toParts = (to && to.split('/')) || [];\n  var fromParts = (from && from.split('/')) || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');\n\n  if (\n    mustEndAbs &&\n    fromParts[0] !== '' &&\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\n  )\n    fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nmodule.exports = resolvePathname;\n\n};"],
"names":["shadow$provide","global","require","module","exports","spliceOne","list","index","k","i","n","length","pop","resolvePathname","to","from","undefined","toParts","split","fromParts","isToAbs","charAt","isFromAbs","mustEndAbs","concat","last","hasTrailingSlash","up","part","unshift","pathname","result","join","substr"]
}
